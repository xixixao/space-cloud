// Generated by CoffeeScript 1.6.2
(function() {
  var Course, Q, Schema, User, app, courseSchema, db, express, mongoose, port, server, userSchema, wiped;

  mongoose = require('mongoose');

  express = require('express');

  Q = require('q');

  (require('./q-each'))(Q);

  app = express();

  port = 3333;

  server = app.listen(port, function() {
    return console.log("Express server listening on port %d in %s mode", server.address().port, app.settings.env);
  });

  app.configure(function() {
    app.set('port', port);
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    return app.use(express.compress());
  });

  app.configure('development', function() {
    return app.use(express.errorHandler());
  });

  app.all('/server-check', function(request, response) {
    return response.send("Cloud running");
  });

  mongoose.connect("mongodb://localhost/test");

  Schema = mongoose.Schema;

  db = mongoose.connection;

  db.on("error", function() {
    return console.error("of");
  });

  db.once("open", function() {
    return console.log("success");
  });

  courseSchema = Schema({
    name: String,
    courseCode: Number
  });

  userSchema = Schema({
    name: String,
    courses: [
      {
        type: Schema.Types.ObjectId,
        ref: 'Course'
      }
    ]
  });

  Course = mongoose.model('Course', courseSchema);

  User = mongoose.model('User', userSchema);

  wiped = Q.map(db.collections, function(collection) {
    return Q.invoke(collection, 'drop');
  });

  wiped.then(function() {
    User.find(function(err, users) {
      return console.log("Number of users " + users.length);
    });
    return Course.find(function(err, courses) {
      return console.log("Number of users " + courses.length);
    });
  });

  app.get('/users', function(request, response) {
    return response.send(users);
  });

  app.get('/users/:name', function(request, response) {
    return User.find({
      name: request.params.name
    }, function(err, docs) {
      return response.send(docs);
    });
  });

  app.put('/client/create-form', function(request, response) {
    res.writeHead(200, {
      'Content-Type': 'text/plain'
    });
    return res.end(JSON.stringify(list));
  });

}).call(this);
