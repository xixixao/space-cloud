// Generated by CoffeeScript 1.6.2
(function() {
  var Course, Feed, File, Question, User, _ref;

  _ref = require('./model'), Course = _ref.Course, User = _ref.User, File = _ref.File, Feed = _ref.Feed, Question = _ref.Question;

  module.exports = function(app) {
    app.get('/users/:login', function(request, response) {
      return User.find({
        _id: request.params.login
      }, function(err, docs) {
        return response.send(docs);
      });
    });
    app.post('/users', function(request, response) {
      var user;

      user = new User({
        name: request.body.name,
        _id: request.body._id,
        password: request.body.password
      });
      return user.save(function(err) {
        if (err != null) {
          return response.send(err);
        } else {
          return response.send(user);
        }
      });
    });
    app.post('/login', function(request, response) {
      return User.findOne({
        _id: request.body._id
      }, function(err, user) {
        if (err != null) {
          return response.send(err);
        } else {
          if (user.password !== request.body.password) {
            return response.send("error");
          } else {
            return response.send("ok");
          }
        }
      });
    });
    app.post('/courses', function(request, response) {
      var course;

      course = new Course({
        name: request.body.name,
        _id: request.body._id
      });
      return course.save(function(err) {
        if (err != null) {
          return response.send(err);
        } else {
          return response.send(course);
        }
      });
    });
    app.get('/courses/:code', function(request, response) {
      return Course.find({
        _id: request.params.code
      }, function(err, docs) {
        return response.send(docs);
      });
    });
    app.post('/users/:login', function(request, response) {
      return User.findOne({
        _id: request.params.login
      }, function(err, user) {
        var course, courses, _i, _len;

        if (err != null) {
          return response.send(err);
        } else {
          courses = request.body.courses;
          for (_i = 0, _len = courses.length; _i < _len; _i++) {
            course = courses[_i];
            user.courses.addToSet(course);
          }
          return response.send(user);
        }
      });
    });
    app.post('/files', function(request, response) {
      var file;

      file = new File({
        _id: request.body._id,
        path: request.body.path,
        name: request.body.name,
        owner: request.body.owner
      });
      return file.save(function(err) {
        if (err != null) {
          return response.send(err);
        } else {
          return response.send(file);
        }
      });
    });
    app.post('/questions', function(request, response) {
      var question;

      question = new Question({
        _id: request.body._id,
        owner: request.body.owner,
        filePosition: request.body.filePosition
      });
      return question.save(function(err) {
        if (err != null) {
          return response.send(err);
        } else {
          return response.send(question);
        }
      });
    });
    return app.post('/feeds', function(request, response) {
      var feed;

      feed = new Feed({
        _id: request.body._id,
        owner: request.body.owner
      });
      return feed.save(function(err) {
        if (err != null) {
          return response.send(err);
        } else {
          return response.send(feed);
        }
      });
    });
  };

}).call(this);
